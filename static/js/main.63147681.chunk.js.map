{"version":3,"sources":["api/youtube.js","Components/Navbar.js","Components/Video.js","Components/Videos.js","App.js","index.js"],"names":["axios","create","baseURL","Navbar","searchVideos","useState","searchTerm","setSearchTerm","className","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","required","Video","video","videoSelect","src","snippet","thumbnails","medium","url","alt","onClick","class","title","length","substr","channelTitle","Videos","mainVideo","videos","loading","mainVideoSrc","setMainVideoSrc","useEffect","id","videoId","frameBorder","height","width","description","map","key","App","setVideos","selectedVideo","setSelectedVideo","setLoading","a","youtube","get","params","part","maxResults","q","res","data","items","console","error","message","ReactDom","render","document","querySelector"],"mappings":"8SAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,0CC+BIC,EAhCA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACCC,mBAAS,IADV,mBAC5BC,EAD4B,KAChBC,EADgB,KAWnC,OACE,0BACEC,UAAU,+CACVC,SAPiB,SAAAC,GACnBA,EAAEC,iBACFP,EAAaE,KAOX,yBAAKE,UAAU,8DACb,2BACEA,UAAU,sIACVI,KAAK,OACLC,YAAY,wBACZC,SAlBa,SAAAJ,GACnBH,EAAcG,EAAEK,OAAOC,QAkBjBC,UAAQ,IAEV,4BAAQT,UAAU,qBAAqBI,KAAK,UAC1C,uBAAGJ,UAAU,oGCERU,EA3BD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACtB,OACE,oCACGD,GACC,yBAAKX,UAAU,+BACb,yBACEa,IAAKF,EAAMG,QAAQC,WAAWC,OAAOC,IACrCC,IAAI,YACJlB,UAAU,0BACVmB,QAAS,kBAAMP,EAAYD,MAE7B,yBAAKS,MAAM,sBACT,uBAAGpB,UAAU,mEACVW,EAAMG,QAAQO,MAAMC,QAAU,GAA9B,UACMX,EAAMG,QAAQO,MAAME,OAAO,EAAG,IADpC,OAEGZ,EAAMG,QAAQO,OAEpB,uBAAGrB,UAAU,oCACVW,EAAMG,QAAQU,kBCsBdC,EArCA,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,OAAQf,EAA2B,EAA3BA,YAAagB,EAAc,EAAdA,QAAc,EACtB/B,mBAAS,IADa,mBACvDgC,EADuD,KACzCC,EADyC,KAQ9D,OALAC,qBAAU,WACRL,GACEI,EAAgB,6BAAD,OAA8BJ,EAAUM,GAAGC,YAC3D,CAACP,IAGF,yBAAK1B,UAAU,kBACZ0B,GACC,yBAAK1B,UAAU,2BACb,4BACEkC,YAAY,IACZC,OAAO,OACPC,MAAM,OACNf,MAAOK,EAAUZ,QAAQO,MACzBR,IAAKgB,IAEP,6BACE,uBAAG7B,UAAU,8BACV0B,EAAUZ,QAAQO,OAErB,uBAAGrB,UAAU,WAAW0B,EAAUZ,QAAQuB,eAIhD,yBAAKrC,UAAS,sBAAiB4B,EAAU,GAAK,yBAC3CD,GACCA,EAAOW,KAAI,SAAC3B,EAAOqB,GACjB,OAAO,kBAAC,EAAD,CAAOO,IAAKP,EAAIrB,MAAOA,EAAOC,YAAaA,UCW/C4B,EAvCH,WAAO,IAAD,EACY3C,mBAAS,IADrB,mBACT8B,EADS,KACDc,EADC,OAE0B5C,mBAAS,MAFnC,mBAET6C,EAFS,KAEMC,EAFN,OAGc9C,mBAAS,QAHvB,mBAGT+B,EAHS,KAGAgB,EAHA,KASVhD,EAAY,uCAAG,WAAME,GAAN,eAAA+C,EAAA,+EAECC,EAAQC,IAAI,SAAU,CACtCC,OAAQ,CACNC,KAAM,UACNC,WAAY,GACZX,IAAK,0CACLY,EAAGrD,KAPU,OAEXsD,EAFW,OAUjBX,EAAUW,EAAIC,KAAKC,OACnBX,EAAiBS,EAAIC,KAAKC,MAAM,IAChCV,GAAW,GAZM,gDAcjBW,QAAQC,MAAM,KAAIC,SAdD,yDAAH,sDAiBlB,OACE,oCACE,kBAAC,EAAD,CAAQ7D,aAAcA,IACtB,kBAAC,EAAD,CACE8B,UAAWgB,EACXf,OAAQA,EACRf,YA3Bc,SAAAD,GAClBgC,EAAiBhC,IA2BbiB,QAASA,MCnCjB8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.63147681.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3',\n});\n","import React, { useState } from 'react';\n\nconst Navbar = ({ searchVideos }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleChange = e => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    searchVideos(searchTerm);\n  };\n  return (\n    <form\n      className='w-10/12 md:w-full max-w-sm mt-4 mb-6 mx-auto'\n      onSubmit={handleSubmit}\n    >\n      <div className='flex items-center border-b border-b-2 border-teal-500 py-2'>\n        <input\n          className='appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight text-lg md:text-2xl focus:outline-none'\n          type='text'\n          placeholder='Search for videos....'\n          onChange={handleChange}\n          required\n        />\n        <button className='focus:outline-none' type='submit'>\n          <i className='fas fa-search py-1 px-2 flex-shrink-0 text-xl md:text-2xl text-blue-400 hover:text-blue-600' />\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Video = ({ video, videoSelect }) => {\n  return (\n    <>\n      {video && (\n        <div className='flex h-32 pr-4 mb-6 lg:mb-0'>\n          <img\n            src={video.snippet.thumbnails.medium.url}\n            alt='thumbnail'\n            className='lg:w-1/2 cursor-pointer'\n            onClick={() => videoSelect(video)}\n          />\n          <div class='flex flex-col ml-3'>\n            <p className='text-sm lg:text-xs text-justify mb-1 font-bold md:font-semibold'>\n              {video.snippet.title.length >= 40\n                ? `${video.snippet.title.substr(0, 40)}...`\n                : video.snippet.title}\n            </p>\n            <p className='text-sm lg:text-xs text-gray-600'>\n              {video.snippet.channelTitle}\n            </p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Video;\n","import React, { useState, useEffect } from 'react';\nimport Video from './Video';\n\n// import Spinner from './Spinner';\n\nconst Videos = ({ mainVideo, videos, videoSelect, loading }) => {\n  const [mainVideoSrc, setMainVideoSrc] = useState('');\n\n  useEffect(() => {\n    mainVideo &&\n      setMainVideoSrc(`https://youtube.com/embed/${mainVideo.id.videoId}`);\n  }, [mainVideo]);\n\n  return (\n    <div className='grid-container'>\n      {mainVideo && (\n        <div className='main-video mb-6 md:mb-0'>\n          <iframe\n            frameBorder='0'\n            height='100%'\n            width='100%'\n            title={mainVideo.snippet.title}\n            src={mainVideoSrc}\n          ></iframe>\n          <div>\n            <p className='text-xl my-2 font-semibold'>\n              {mainVideo.snippet.title}\n            </p>\n            <p className='text-sm'>{mainVideo.snippet.description}</p>\n          </div>\n        </div>\n      )}\n      <div className={`videos mb-4 ${loading ? '' : 'lg:overflow-y-scroll'}`}>\n        {videos &&\n          videos.map((video, id) => {\n            return <Video key={id} video={video} videoSelect={videoSelect} />;\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Videos;\n","import React, { useState } from 'react';\nimport './assets/global.css';\nimport './assets/main.css';\nimport youtube from './api/youtube';\nimport Navbar from './Components/Navbar';\nimport Videos from './Components/Videos';\n\nconst App = () => {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [loading, setLoading] = useState('true');\n\n  const videoSelect = video => {\n    setSelectedVideo(video);\n  };\n\n  const searchVideos = async searchTerm => {\n    try {\n      const res = await youtube.get('search', {\n        params: {\n          part: 'snippet',\n          maxResults: 11,\n          key: 'AIzaSyBuI2ux4TwdA3HdGap9sEm6gZAuzfvTqJg',\n          q: searchTerm,\n        },\n      });\n      setVideos(res.data.items);\n      setSelectedVideo(res.data.items[0]);\n      setLoading(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  return (\n    <>\n      <Navbar searchVideos={searchVideos} />\n      <Videos\n        mainVideo={selectedVideo}\n        videos={videos}\n        videoSelect={videoSelect}\n        loading={loading}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}